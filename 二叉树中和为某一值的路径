输入一颗二叉树的根节点和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。

# -*- coding:utf-8 -*-
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    # 返回二维列表，内部每个列表表示找到的路径
    def FindPath(self, root, expectNumber):
      if not root:
        return []
      res=[]
      def FindPathNumber(root,path,currentNumber):
        currentNumber+=root.val
        path.append(root)
        isleaf=(root.left==None) and (root.right)==None
        if currentNumber==expectNumber and isleaf:
          onepath=[]
          for node in path:
            onepath.append(node.val)
          res.append(onepath)
        
        if currentNumber<expectNumber:
          if root.left:
            FindPathNumber(root.left,path,currentNumber)
          if root.right:
            FindPathNumber(root.right,path,currentNumber)
        path.pop()
        
     FindPathNumber(root,[],0)
     return res
