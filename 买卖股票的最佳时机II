给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。

设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。

注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）

贪心：
class Solution(object):
    def maxProfit(self, prices):
        profit=0
        for i in range(len(prices)-1):
            temp=prices[i+1]-prices[i]
            if temp>0:
                profit+=temp
        return profit
        
DP：
class Solution(object):
    def maxProfit(self, prices):
      if not prices:
        return 0
      n=len(prices)
      dp=[[0]*2 for _ in range(n)]
      dp[0][0],dp[0][1]=0,-prices[0]
      for i in range(1,n):
        dp[i][0]=max(dp[i-1][0],dp[i-1][1]+prices[i]
        dp[i][1]=max(dp[i-1][0]-prices[i],dp[i-1][0]
      return dp[n-1][0]
