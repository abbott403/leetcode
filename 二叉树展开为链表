题目：
    1            
   / \
  2   5
 / \   \
3   4   6

展开为:
1
 \
  2
   \
    3
     \
      4
       \
        5
         \
          6

递归法：
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def flatten(self, root: TreeNode) -> None:
      if not root or (not root.left and not root.right):
        return root
      
      self.flatten(root.left)
      self.flatten(root.right)
      
      temp=root.right
      root.right=root.left
      root.left=None  #一定要将左子树置空
      while root.right:
        root=root.right
      root.right=temp
      
 迭代法：
 class Solution:
    def flatten(self, root: TreeNode) -> None:
      cur=root
      while cur:
        p=cur.left
        while p.right:
          p=p.right
        p.right=root.right
        root.right=root.left
        root.left=None
      cur=cur.right
